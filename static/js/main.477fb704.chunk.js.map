{"version":3,"sources":["../clickygame/src/components/Nav/Nav.js","../clickygame/src/components/Card/Card.js","../clickygame/src/components/Jumbotron/Jumbotron.js","../clickygame/src/components/Footer/Footer.js","../clickygame/src/App.js","../clickygame/src/index.js"],"names":["Nav","props","react_default","a","createElement","className","href","message","score","highscore","Card","aria-label","onClick","imageClick","id","alt","src","image","Jumbotron","Footer","App","state","Cards","clickedCardIds","_this","console","log","includes","setState","push","length","i","j","Math","floor","random","_ref","_this2","this","components_Nav_Nav","components_Jumbotron_Jumbotron","map","card","components_Card_Card","key","components_Footer_Footer","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"inDAiBeA,MAdf,SAAaC,GACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,iBAEAJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMM,SAClCL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UAAkCJ,EAAMO,MAAxC,kBAA8DP,EAAMQ,cCArEC,SARF,SAAAT,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBM,aAAW,aAAaC,QAAS,kBAAMX,EAAMY,WAAWZ,EAAMa,MAC7FZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQU,IAAI,UAAUC,IAAKf,EAAMgB,MAAOH,GAAIb,EAAMa,SCGxDI,SANG,kBACjBhB,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,wICGae,SANA,kBACdjB,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,kCCiEagB,oNA7DbC,MAAQ,CACNC,QACAC,eAAgB,GAChBf,MAAO,EACPC,UAAW,EACXF,QAAS,8BAGXM,WAAa,SAAAC,GACX,IAAIS,EAAiBC,EAAKH,MAAME,eAGhC,GAFAE,QAAQC,IAAIZ,GACZW,QAAQC,IAAIH,GACRA,EAAeI,SAASb,GAC1BU,EAAKI,SAAS,CACZL,eAAgB,GAAIf,MAAO,EAAGD,QAAS,mDAKzC,GADAgB,EAAeM,KAAKf,GACU,KAA1BS,EAAeO,OACjBN,EAAKI,SAAS,CACZpB,MAAO,GAAIC,UAAW,GAAIF,QAAS,oDAAqDgB,eAAgB,SAGvG,CACHC,EAAKI,SAAS,CACZN,QAAOC,iBAAgBf,MAAOe,EAAeO,OAC7CrB,UAAWc,EAAeO,OAAQvB,QAAS,0BAE7C,IAAK,IAAIwB,EAAIT,EAAMQ,OAAS,EAAGC,EAAI,EAAGA,IAAK,CACzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADCK,EAElB,CAACd,EAAMU,GAAIV,EAAMS,IAAvCT,EAAMS,GAFkCK,EAAA,GAE9Bd,EAAMU,GAFwBI,EAAA,8EAOxC,IAAAC,EAAAC,KACP,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmC,EAAD,CACE/B,MAAO8B,KAAKjB,MAAMb,MAClBC,UAAW6B,KAAKjB,MAAMZ,UACtBF,QAAS+B,KAAKjB,MAAMd,UAEtBL,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZiC,KAAKjB,MAAMC,MAAMmB,IAAI,SAACC,EAAMX,GAAP,OACpB7B,EAAAC,EAAAC,cAACuC,EAAD,CACEC,IAAKb,EACLlB,WAAYwB,EAAKxB,WACjBC,GAAI4B,EAAK5B,GACTG,MAAOyB,EAAKzB,WAIlBf,EAAAC,EAAAC,cAACyC,EAAD,cAxDUC,cCJlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.477fb704.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n            <ul>\r\n                <li className=\"itemLeft\"> \r\n                <a className=\"navbar-brand\" href=\"/\"> Clicky Game</a>\r\n                </li>\r\n                <li className=\"itemCenter\">{props.message}</li>\r\n                <li className=\"itemRight\">Score: {props.score} | high Score: {props.highscore}</li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n//pass the image into each card so all 12 are rendered\r\nconst Card = props => (\r\n  <div className=\"card click-item\" aria-label=\"click-item\" onClick={() => props.imageClick(props.id)}>\r\n    <div className=\"img-container\">\r\n      <img className=\"image\" alt=\"cartoon\" src={props.image} id={props.id} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nconst Jumbotron = () => (\r\n\t<header className = \"header\">\r\n\t\t<h1> Clicky Game!</h1>\r\n\t\t<h2>Click on any image to earn a point, but don't click on the same picture more than once. Click all 12 pics, and you win.</h2>\r\n\t</header>\r\n);\r\nexport default Jumbotron;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => (\r\n\t<header className = \"footer\">\r\n\t\t<p>Clicky GAME</p>\r\n\t</header>\r\n);\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport Nav from \"./components/Nav/Nav\";\nimport Card from \"./components/Card/Card\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport Footer from \"./components/Footer/Footer\"\nimport Cards from \"./Cards.json\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    Cards,\n    clickedCardIds: [],\n    score: 0,\n    highscore: 0,\n    message: \"Click an image to begin!\"\n  };\n\n  imageClick = id => {\n    let clickedCardIds = this.state.clickedCardIds;\n    console.log(id);\n    console.log(clickedCardIds);\n    if (clickedCardIds.includes(id)) {\n      this.setState({\n        clickedCardIds: [], score: 0, message: \"Game Over! You lost. Click to play again!\"\n      });\n    }\n    else {\n      clickedCardIds.push(id)\n      if (clickedCardIds.length === 12) {\n        this.setState({\n          score: 12, highscore: 12, message: \"You Won! Great Job, Smartie! Click to play again!\", clickedCardIds: []\n        });\n      }\n      else {\n        this.setState({\n          Cards, clickedCardIds, score: clickedCardIds.length,\n          highscore: clickedCardIds.length, message: \"Correct, keep going!!\"\n        });\n        for (let i = Cards.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1));\n          [Cards[i], Cards[j]] = [Cards[j], Cards[i]];\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav\n          score={this.state.score}\n          highscore={this.state.highscore}\n          message={this.state.message}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.Cards.map((card, i) => (\n            <Card\n              key={i}\n              imageClick={this.imageClick}\n              id={card.id}\n              image={card.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}